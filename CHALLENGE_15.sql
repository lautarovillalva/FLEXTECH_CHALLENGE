CREATE TABLE FECHA_VTO(
	ID INT NOT NULL PRIMARY KEY,
	FECHA DATE NOT NULL
)
SET DATEFORMAT DMY
INSERT INTO FECHA_VTO(ID,FECHA) VALUES (1,'1-10-2023'),(2,'22-5-2025'),(5,'22-1-2023'),(6,'15-6-2028')
CREATE TABLE CHALLENGE_15(
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	ID_FECHAVTO INT,
	NOMBRE VARCHAR(30) NOT NULL,
	AGE INT NOT NULL CHECK(AGE>0)
)
--
INSERT INTO CHALLENGE_15(ID_FECHAVTO,NOMBRE,AGE) VALUES (1,'Bob',21),(1,'Sam',19),(2,'Jill',18),(3,'Jim',21),(4,'Sally',19),(2,'Jess',20),(3,'Will',21)


CREATE PROCEDURE PersonaDelete(@ID INT) AS
BEGIN
	DECLARE @EXIST BIT;
	SELECT 
		@EXIST=COUNT(C15.ID)
	FROM CHALLENGE_15 AS C15 WHERE C15.ID=@ID
	IF(@EXIST=0)
	BEGIN
		PRINT -1 
	END
	ELSE
	BEGIN
		SET NOCOUNT ON
		DELETE FROM CHALLENGE_15 WHERE CHALLENGE_15.ID=@ID
		DELETE FROM FECHA_VTO WHERE FECHA_VTO.ID=@ID
		PRINT 0
	END
END
--
EXEC PersonaDelete 1
EXEC PersonaDelete 50
--
DROP TABLE FECHA_VTO
DROP TABLE CHALLENGE_15
DROP PROCEDURE PersonaDelete

--EL PROCEDIMIENTO ALMACENADO RECIBE UN ID COMO PAR√ÅMETRO. EVALUA SI EXISTE; SI NO EXISTE MUESTRA -1 POR PANTALLA, SI EXISTE ELIMINA EL ID Y SU FECHA_VTO SI LA TUVIESE. SE QUITA EL MENSAJE DE COLUMNAS AFECTADAS PARA QUE SOLO SE MUESTRE LOS MENSAJES DEL ENUNCIADO.
